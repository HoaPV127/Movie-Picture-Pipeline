name: Frontend CI

on:
  pull_request:
    types: [opened]

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint Job

    defaults:
      run:
        working-directory: starter/frontend

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: latest

      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install Dependencies
        run: npm install

      - name: Run Lint
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    name: Test Job

    defaults:
      run:
        working-directory: starter/frontend

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: latest

      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        run: npm run test

  build:
    runs-on: ubuntu-latest
    name: Build Job
    needs: [lint, test]

    defaults:
      run:
        working-directory: starter/frontend

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: latest

      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install Dependencies
        run: npm install

      - name: Build Application with Docker
        run: |
          docker build -t my-app .