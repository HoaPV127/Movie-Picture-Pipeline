name: Backend Continuous Deployment

on:
  push:
    branches:
      - main

  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint Job

    defaults:
      run:
        working-directory: starter/backend

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --dev

      - name: Run Lint
        run: pipenv run lint

  test:
    runs-on: ubuntu-latest
    name: Test Job

    defaults:
      run:
        working-directory: starter/backend

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install

      - name: Run Tests
        run: pipenv run test

  build:
    runs-on: ubuntu-latest
    name: Build & Push & Deploy Job
    needs: [lint, test]

    defaults:
      run:
        working-directory: starter/backend

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install

      - name: Build Application with Docker
        run: |
          docker build --tag=backend:latest .
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Push Docker Image to Amazon ECR
        run: |
          docker tag backend:latest 346526321261.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/backend:latest &&\
          docker push 346526321261.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/backend:latest
      
      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
      
      - name: Update kubeconfig for EKS cluster
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name project4-cluster

      - name: Deploy to EKS
        run: |
          kubectl set image deployment/backend backend=346526321261.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/backend:latest
